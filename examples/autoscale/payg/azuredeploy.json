{
    "$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion":"1.2.0.0",
    "parameters":{
        "templateBaseUrl":{
            "defaultValue":"https://cdn.f5.com/product/cloudsolutions/",
            "metadata":{
                "description":"The publicly accessible URL where the linked ARM templates are located."
            },
            "type":"string"
        },
        "artifactLocation":{
            "defaultValue":"[concat('f5-azure-arm-templates-v2/v', deployment().properties.template.contentVersion, '/examples/')]",
            "metadata":{
                "description":"The directory, relative to the templateBaseUrl, where the modules folder is located."
            },
            "type":"string"
        },
        "uniqueString":{
            "metadata":{
                "description":"REQUIRED - A prefix that will be used to name template resources. Because some resources require globally unique names, we recommend using a unique value."
            },
            "type":"string"
        },
        "sshKey":{
            "metadata":{
                "description":"REQUIRED - Supply the public key that will be used for SSH authentication to the BIG-IP and application virtual machines."
            },
            "type":"string"
        },
        "restrictedSrcAddressMgmt":{
            "metadata":{
                "description":"REQUIRED - When creating management security group, this field restricts management access to a specific network or address. Enter an IP address or address range in CIDR notation, or asterisk for all sources."
            },
            "type":"string"
        },
        "restrictedSrcAddressApp":{
            "metadata":{
                "description":"REQUIRED - When creating application security group, this field restricts application access to a specific network or address. Enter an IP address or address range in CIDR notation, or asterisk for all sources."
            },
            "type":"string"
        },
        "bigIpImage":{
            "defaultValue":"f5-networks:f5-big-ip-best:f5-bigip-virtual-edition-25m-best-hourly:16.0.101000",
            "metadata":{
                "description":"2 formats accepted. URN of the image to use in Azure marketplace or id of custom image. Example URN value: f5-networks:f5-big-ip-byol:f5-big-ltm-2slot-byol:15.1.201000. You can find the URNs of F5 marketplace images in the README for this template or by running the command: az vm image list --output yaml --publisher f5-networks --all. See https://clouddocs.f5.com/cloud/public/v1/azure/Azure_download.html for information on creating custom BIG-IP image."
            },
            "type":"string"
        },
        "bigIpInstanceType":{
            "defaultValue":"Standard_DS3_v2",
            "metadata":{
                "description":"Enter valid instance type."
            },
            "type":"string"
        },
        "bigIpRuntimeInitConfig":{
            "defaultValue":"https://raw.githubusercontent.com/F5Networks/f5-azure-arm-templates-v2/master/examples/autoscale/bigip-configurations/runtime-init-conf-payg.yaml",
            "metadata":{
                "description":"Supply a URL to the bigip-runtime-init configuration file in YAML or JSON format, or an escaped JSON string to use for f5-bigip-runtime-init configuration."
            },
            "type":"string"
        },
        "bigIpRuntimeInitPackageUrl":{
            "defaultValue":"https://cdn.f5.com/product/cloudsolutions/f5-bigip-runtime-init/develop/develop/dist/f5-bigip-runtime-init-1.2.0-1.gz.run",
            "metadata":{
                "description":"URL for BIG-IP Runtime Init package"
            },
            "type":"string"
        },
        "bigIpScalingMinSize":{
            "defaultValue":1,
            "metadata":{
                "description":"Minimum number of BIG-IP instances (1-99) you want available in the Auto Scale Group."
            },
            "minValue":1,
            "maxValue":99,
            "type":"int"
        },
        "bigIpScalingMaxSize":{
            "defaultValue":10,
            "metadata":{
                "description":"Maximum number of BIG-IP instances (2-100) that can be created in the Auto Scale Group."
            },
            "minValue":2,
            "maxValue":100,
            "type":"int"
        },
        "bigIpScaleInCpuThreshold":{
            "defaultValue":20,
            "maxValue":100,
            "metadata":{
                "description":"The percentage of CPU utilization that should trigger a scale in event."
            },
            "minValue":1,
            "type":"int"
        },
        "bigIpScaleInThroughputThreshold":{
            "defaultValue":10000000,
            "metadata":{
                "description":"The amount of throughput (**bytes**) that should trigger a scale in event. Note: The default value is equal to 10 MB."
            },
            "type":"int"
        },
        "bigIpScaleInTimeWindow":{
            "defaultValue":10,
            "metadata":{
                "description":"The time window required to trigger a scale in event. This is used to determine the amount of time needed for a threshold to be breached, as well as to prevent excessive scaling events (flapping). **Note:** Allowed values are 1-60 (minutes)."
            },
            "minValue":1,
            "type":"int"
        },
        "bigIpScaleOutCpuThreshold":{
            "defaultValue":80,
            "maxValue":100,
            "metadata":{
                "description":"The percentage of CPU utilization that should trigger a scale out event."
            },
            "minValue":1,
            "type":"int"
        },
        "bigIpScaleOutThroughputThreshold":{
            "defaultValue":20000000,
            "metadata":{
                "description":"The amount of throughput (**bytes**) that should trigger a scale out event. Note: The default value is equal to 20 MB."
            },
            "type":"int"
        },
        "bigIpScaleOutTimeWindow":{
            "defaultValue":10,
            "metadata":{
                "description":"The time window required to trigger a scale out event. This is used to determine the amount of time needed for a threshold to be breached, as well as to prevent excessive scaling events (flapping). **Note:** Allowed values are 1-60 (minutes)."
            },
            "minValue":1,
            "type":"int"
        },
        "useAvailabilityZones":{
            "defaultValue":true,
            "metadata":{
                "description":"This deployment can deploy resources into Azure Availability Zones (if the region supports it).  If that is not desired the input should be set 'No'. If the region does not support availability zones the input should be set to No."
            },
            "type":"bool"
        },
        "workspaceId":{
            "metadata":{
                "description":"Log Analytics workspace ID used by Telemetry Streaming for sending logs"
            },
            "type":"string",
            "defaultValue":"WORKSPACE_ID"
        },
        "appContainerName":{
            "defaultValue":"f5devcentral/f5-demo-app:latest",
            "metadata":{
                "description":"The docker container to use when deploying the example application."
            },
            "type":"string"
        },
        "appScalingMinSize":{
            "defaultValue":1,
            "metadata":{
                "description":"Minimum number of Application instances (1-99) you want available in the Auto Scale Group."
            },
            "minValue":1,
            "maxValue":99,
            "type":"int"
        },
        "appScalingMaxSize":{
            "defaultValue":10,
            "metadata":{
                "description":"Maximum number of Application instances (2-100) that can be created in the Auto Scale Group."
            },
            "minValue":2,
            "maxValue":100,
            "type":"int"
        },
        "tagValues":{
            "defaultValue":{
                "application":"APP",
                "cost":"COST",
                "environment":"ENV",
                "group":"GROUP",
                "owner":"OWNER"
            },
            "metadata":{
                "description":"Default key/value resource tags will be added to the resources in this deployment, if you would like the values to be unique adjust them as needed for each key."
            },
            "type":"object"
        }
    },
    "variables":{
        "deploymentApiVersion":"2019-05-10",
        "contentVersion":"[deployment().properties.template.contentVersion]",
        "uniqueString":"[toLower(parameters('uniqueString'))]",
        "adminUsername":"azureuser",
        "assignManagedIdentity":"[not(empty(variables('customAutoscaleRules')))]",
        "builtInRoleType":"Contributor",
        "customRoleAssignableScopes":[
            
        ],
        "customRoleDescription":"",
        "customRoleName":"",
        "customRolePermissions":[
            
        ],
        "keyVaultName":"",
        "keyVaultPermissionsKeys":[
            
        ],
        "keyVaultPermissionsSecrets":[
            
        ],
        "secretName":"",
        "userAssignedIdentityName":"[concat(variables('uniqueString'), '-userIdentity')]",
        "numSubnets":2,
        "restrictedSrcMgmtPort":"8443",
        "vnetName":"[concat(variables('uniqueString'), '-vnet')]",
        "vnetAddressPrefix":"10.0",
        "externalLoadBalancerName":"[concat(variables('uniqueString'), '-alb')]",
        "internalLoadBalancerName":"None",
        "internalLoadBalancerProbePort":"3456",
        "internalSubnetId":"",
        "loadBalancerRulePorts":[
            "80",
            "443"
        ],
        "nsg0":[
            {
                "destinationPortRanges":[
                    "22",
                    "8443"
                ],
                "sourceAddressPrefix":"[parameters('restrictedSrcAddressMgmt')]",
                "protocol":"Tcp"
            },
            {
                "destinationPortRanges":[
                    "80",
                    "443"
                ],
                "sourceAddressPrefix":"*",
                "protocol":"Tcp"
            }
        ],
        "nsg1":[
            {
                "destinationPortRanges":[
                    "80",
                    "443"
                ],
                "sourceAddressPrefix":"[parameters('restrictedSrcAddressApp')]",
                "protocol":"Tcp"
            },
            {
                "destinationPortRanges":[
                    "80",
                    "443"
                ],
                "sourceAddressPrefix":"10.0.0.0/8",
                "protocol":"Tcp"
            }
        ],
        "nsg2":[
            
        ],
        "numberPublicExternalIpAddresses":1,
        "numberPublicMgmtIpAddresses":0,
        "appInstanceName":"[variables('uniqueString')]",
        "appInstanceType":"Standard_D2s_v3",
        "appVmScaleSetMaxCount":"[parameters('appScalingMaxSize')]",
        "appVmScaleSetMinCount":"[parameters('appScalingMinSize')]",
        "cloudInitUrl":"",
        "createAutoscaleGroup":true,
        "provisionApp":"[not(empty(parameters('appContainerName')))]",
        "appInsights":"[concat(variables('uniqueString'), '-insights')]",
        "appInsightsId":"[resourceId('Microsoft.Insights/components', variables('appInsights'))]",
        "bigIpImage":"[parameters('bigIpImage')]",
        "bigIpInstanceType":"[parameters('bigIpInstanceType')]",
        "bigIpVmScaleSetMaxCount":"[parameters('bigIpScalingMaxSize')]",
        "bigIpVmScaleSetMinCount":"[parameters('bigIpScalingMinSize')]",
        "cpuMetricName":"Percentage CPU",
        "customAutoscaleRules":[
            {
                "scaleAction":{
                    "direction":"Increase",
                    "type":"ChangeCount",
                    "value":"1",
                    "cooldown":"PT1M"
                },
                "metricTrigger":{
                    "metricName":"F5_system_cpu",
                    "metricNamespace":"azure.applicationinsights",
                    "metricResourceUri":"[variables('appInsightsId')]",
                    "operator":"GreaterThan",
                    "statistic":"Average",
                    "threshold":"[variables('scaleOutCpuThreshold')]",
                    "timeAggregation":"Average",
                    "timeGrain":"PT1M",
                    "timeWindow":"[concat('PT', parameters('bigIpScaleOutTimeWindow'), 'M')]",
                    "Dimensions":[
                        
                    ],
                    "dividePerInstance":false
                }
            },
            {
                "scaleAction":{
                    "direction":"Decrease",
                    "type":"ChangeCount",
                    "value":"1",
                    "cooldown":"PT1M"
                },
                "metricTrigger":{
                    "metricName":"F5_system_cpu",
                    "metricNamespace":"azure.applicationinsights",
                    "metricResourceUri":"[variables('appInsightsId')]",
                    "operator":"LessThan",
                    "statistic":"Average",
                    "threshold":"[variables('scaleInCpuThreshold')]",
                    "timeAggregation":"Average",
                    "timeGrain":"PT1M",
                    "timeWindow":"[concat('PT', parameters('bigIpScaleInTimeWindow'), 'M')]",
                    "Dimensions":[
                        
                    ],
                    "dividePerInstance":false
                }
            },
            {
                "scaleAction":{
                    "direction":"Increase",
                    "type":"ChangeCount",
                    "value":"1",
                    "cooldown":"PT1M"
                },
                "metricTrigger":{
                    "metricName":"F5_throughputIn_sys/performance/throughput/In_Current",
                    "metricNamespace":"azure.applicationinsights",
                    "metricResourceUri":"[variables('appInsightsId')]",
                    "operator":"GreaterThan",
                    "statistic":"Average",
                    "threshold":"[variables('scaleOutThroughputThreshold')]",
                    "timeAggregation":"Average",
                    "timeGrain":"PT1M",
                    "timeWindow":"[concat('PT', parameters('bigIpScaleOutTimeWindow'), 'M')]",
                    "Dimensions":[
                        
                    ],
                    "dividePerInstance":false
                }
            },
            {
                "scaleAction":{
                    "direction":"Decrease",
                    "type":"ChangeCount",
                    "value":"1",
                    "cooldown":"PT1M"
                },
                "metricTrigger":{
                    "metricName":"F5_throughputIn_sys/performance/throughput/In_Current",
                    "metricNamespace":"azure.applicationinsights",
                    "metricResourceUri":"[variables('appInsightsId')]",
                    "operator":"LessThan",
                    "statistic":"Average",
                    "threshold":"[variables('scaleInThroughputThreshold')]",
                    "timeAggregation":"Average",
                    "timeGrain":"PT1M",
                    "timeWindow":"[concat('PT', parameters('bigIpScaleInTimeWindow'), 'M')]",
                    "Dimensions":[
                        
                    ],
                    "dividePerInstance":false
                }
            }
        ],
        "customEmail":[
            
        ],
        "provisionPublicIpBigip":{
            "name":"publicIp01",
            "properties":{
                "idleTimeoutInMinutes":15
            }
        },
        "roleDefinitionId":"",
        "runtimeInitTag":{
            "workspaceId":"[parameters('workspaceId')]",
            "uniqueString":"[parameters('uniqueString')]"
        },
        "scaleInCpuThreshold":"[parameters('bigIpScaleInCpuThreshold')]",
        "scaleInThroughputThreshold":"[parameters('bigIpScaleInThroughputThreshold')]",
        "scaleInTimeWindow":"[parameters('bigIpScaleInTimeWindow')]",
        "scaleOutCpuThreshold":"[parameters('bigIpScaleOutCpuThreshold')]",
        "scaleOutThroughputThreshold":"[parameters('bigIpScaleOutThroughputThreshold')]",
        "scaleOutTimeWindow":"[parameters('bigIpScaleOutTimeWindow')]",
        "throughputMetricName":"Network In",
        "vmssName":"[concat(variables('uniqueString'), '-bigip-vmss')]"
    },
    "resources":[
        {
            "type":"Microsoft.Resources/deployments",
            "apiVersion":"[variables('deploymentApiVersion')]",
            "condition":"[variables('assignManagedIdentity')]",
            "name":"accessTemplate",
            "properties":{
                "mode":"Incremental",
                "templateLink":{
                    "uri":"[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/access/access.json')]",
                    "contentVersion":"[variables('contentVersion')]"
                },
                "parameters":{
                    "builtInRoleType":{
                        "value":"[variables('builtInRoleType')]"
                    },
                    "customRoleAssignableScopes":{
                        "value":"[variables('customRoleAssignableScopes')]"
                    },
                    "customRoleDescription":{
                        "value":"[variables('customRoleDescription')]"
                    },
                    "customRoleName":{
                        "value":"[variables('customRoleName')]"
                    },
                    "customRolePermissions":{
                        "value":"[variables('customRolePermissions')]"
                    },
                    "keyVaultName":{
                        "value":"[variables('keyVaultName')]"
                    },
                    "keyVaultPermissionsKeys":{
                        "value":"[variables('keyVaultPermissionsKeys')]"
                    },
                    "keyVaultPermissionsSecrets":{
                        "value":"[variables('keyVaultPermissionsSecrets')]"
                    },
                    "secretName":{
                        "value":"[variables('secretName')]"
                    },
                    "secretValue":{
                        "value":""
                    },
                    "userAssignedIdentityName":{
                        "value":"[variables('userAssignedIdentityName')]"
                    },
                    "tagValues":{
                        "value":"[parameters('tagValues')]"
                    }
                }
            }
        },
        {
            "type":"Microsoft.Resources/deployments",
            "apiVersion":"[variables('deploymentApiVersion')]",
            "name":"networkTemplate",
            "properties":{
                "mode":"Incremental",
                "templateLink":{
                    "uri":"[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/network/network.json')]",
                    "contentVersion":"[variables('contentVersion')]"
                },
                "parameters":{
                    "numSubnets":{
                        "value":"[variables('numSubnets')]"
                    },
                    "vnetName":{
                        "value":"[variables('vnetName')]"
                    },
                    "vnetAddressPrefix":{
                        "value":"[variables('vnetAddressPrefix')]"
                    },
                    "tagValues":{
                        "value":"[parameters('tagValues')]"
                    }
                }
            }
        },
        {
            "type":"Microsoft.Resources/deployments",
            "apiVersion":"[variables('deploymentApiVersion')]",
            "name":"dagTemplate",
            "dependsOn":[
                "networkTemplate"
            ],
            "properties":{
                "mode":"Incremental",
                "templateLink":{
                    "uri":"[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/dag/dag.json')]",
                    "contentVersion":"[variables('contentVersion')]"
                },
                "parameters":{
                    "uniqueString":{
                        "value":"[variables('uniqueString')]"
                    },
                    "externalLoadBalancerName":{
                        "value":"[variables('externalLoadBalancerName')]"
                    },
                    "internalLoadBalancerName":{
                        "value":"[variables('internalLoadBalancerName')]"
                    },
                    "internalLoadBalancerProbePort":{
                        "value":"[variables('internalLoadBalancerProbePort')]"
                    },
                    "internalSubnetId":{
                        "value":"[variables('internalSubnetId')]"
                    },
                    "loadBalancerRulePorts":{
                        "value":"[variables('loadBalancerRulePorts')]"
                    },
                    "nsg0":{
                        "value":"[variables('nsg0')]"
                    },
                    "nsg1":{
                        "value":"[variables('nsg1')]"
                    },
                    "nsg2":{
                        "value":"[variables('nsg2')]"
                    },
                    "numberPublicExternalIpAddresses":{
                        "value":"[variables('numberPublicExternalIpAddresses')]"
                    },
                    "numberPublicMgmtIpAddresses":{
                        "value":"[variables('numberPublicMgmtIpAddresses')]"
                    },
                    "tagValues":{
                        "value":"[parameters('tagValues')]"
                    }
                }
            }
        },
        {
            "type":"Microsoft.Resources/deployments",
            "condition":"[variables('provisionApp')]",
            "apiVersion":"[variables('deploymentApiVersion')]",
            "name":"appTemplate",
            "dependsOn":[
                "networkTemplate",
                "dagTemplate"
            ],
            "properties":{
                "mode":"Incremental",
                "templateLink":{
                    "uri":"[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/application/application.json')]",
                    "contentVersion":"[variables('contentVersion')]"
                },
                "parameters":{
                    "adminUsername":{
                        "value":"[variables('adminUsername')]"
                    },
                    "appContainerName":{
                        "value":"[parameters('appContainerName')]"
                    },
                    "cloudInitUrl":{
                        "value":"[variables('cloudInitUrl')]"
                    },
                    "createAutoscaleGroup":{
                        "value":"[variables('createAutoscaleGroup')]"
                    },
                    "instanceName":{
                        "value":"[variables('appInstanceName')]"
                    },
                    "instanceType":{
                        "value":"[variables('appInstanceType')]"
                    },
                    "nsgId":{
                        "value":"[reference('dagTemplate').outputs.nsg1Id.value]"
                    },
                    "sshKey":{
                        "value":"[parameters('sshKey')]"
                    },
                    "subnetId":{
                        "value":"[reference('networkTemplate').outputs.subnets.value[1]]"
                    },
                    "tagValues":{
                        "value":"[parameters('tagValues')]"
                    },
                    "vmScaleSetMaxCount":{
                        "value":"[variables('appVmScaleSetMaxCount')]"
                    },
                    "vmScaleSetMinCount":{
                        "value":"[variables('appVmScaleSetMinCount')]"
                    }
                }
            }
        },
        {
            "type":"Microsoft.Resources/deployments",
            "apiVersion":"[variables('deploymentApiVersion')]",
            "name":"bigipTemplate",
            "dependsOn":[
                "accessTemplate",
                "networkTemplate",
                "dagTemplate"
            ],
            "properties":{
                "mode":"Incremental",
                "templateLink":{
                    "uri":"[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/bigip-autoscale/bigip.json')]",
                    "contentVersion":"[variables('contentVersion')]"
                },
                "parameters":{
                    "adminUsername":{
                        "value":"[variables('adminUsername')]"
                    },
                    "appInsights":{
                        "value":"[variables('appInsights')]"
                    },
                    "cpuMetricName":{
                        "value":"[variables('cpuMetricName')]"
                    },
                    "customAutoscaleRules":{
                        "value":"[variables('customAutoscaleRules')]"
                    },
                    "customEmail":{
                        "value":"[variables('customEmail')]"
                    },
                    "uniqueString":{
                        "value":"[variables('uniqueString')]"
                    },
                    "image":{
                        "value":"[variables('bigIpImage')]"
                    },
                    "inboundMgmtNatPoolId":{
                        "value":"[if(greater(variables('numberPublicMgmtIpAddresses'), 0), reference('dagTemplate').outputs.inboundMgmtNatPool.value, '')]"
                    },
                    "inboundSshNatPoolId":{
                        "value":"[if(greater(variables('numberPublicMgmtIpAddresses'), 0), reference('dagTemplate').outputs.inboundSshNatPool.value, '')]"
                    },
                    "instanceHealthProbeId":{
                        "value":"[reference('dagTemplate').outputs.externalLoadBalancerProbesId.value[0]]"
                    },
                    "instanceType":{
                        "value":"[variables('bigIpInstanceType')]"
                    },
                    "loadBalancerBackendAddressPoolsArray":{
                        "value":[
                            {
                                "id":"[reference('dagTemplate').outputs.externalBackEndLoadBalancerId.value]"
                            }
                        ]
                    },
                    "nsgId":{
                        "value":"[reference('dagTemplate').outputs.nsg0Id.value]"
                    },
                    "provisionPublicIp":{
                        "value":"[variables('provisionPublicIpBigip')]"
                    },
                    "roleDefinitionId":{
                        "value":"[variables('roleDefinitionId')]"
                    },
                    "bigIpRuntimeInitConfig":{
                        "value":"[parameters('bigIpRuntimeInitConfig')]"
                    },
                    "bigIpRuntimeInitPackageUrl":{
                        "value":"[parameters('bigIpRuntimeInitPackageUrl')]"
                    },
                    "scaleInCpuThreshold":{
                        "value":"[variables('scaleInCpuThreshold')]"
                    },
                    "scaleInThroughputThreshold":{
                        "value":"[variables('scaleInThroughputThreshold')]"
                    },
                    "scaleInTimeWindow":{
                        "value":"[variables('scaleInTimeWindow')]"
                    },
                    "scaleOutCpuThreshold":{
                        "value":"[variables('scaleOutCpuThreshold')]"
                    },
                    "scaleOutThroughputThreshold":{
                        "value":"[variables('scaleOutThroughputThreshold')]"
                    },
                    "scaleOutTimeWindow":{
                        "value":"[variables('scaleOutTimeWindow')]"
                    },
                    "sshKey":{
                        "value":"[parameters('sshKey')]"
                    },
                    "subnetId":{
                        "value":"[reference('networkTemplate').outputs.subnets.value[0]]"
                    },
                    "tagValues":{
                        "value":"[union(variables('runtimeInitTag'), parameters('tagValues'))]"
                    },
                    "throughputMetricName":{
                        "value":"[variables('throughputMetricName')]"
                    },
                    "useAvailabilityZones":{
                        "value":"[parameters('useAvailabilityZones')]"
                    },
                    "userAssignManagedIdentity":{
                        "value":"[if(variables('assignManagedIdentity'), reference('accessTemplate').outputs.userAssignedIdentityId.value, '')]"
                    },
                    "vmScaleSetMaxCount":{
                        "value":"[variables('bigIpVmScaleSetMaxCount')]"
                    },
                    "vmScaleSetMinCount":{
                        "value":"[variables('bigIpVmScaleSetMinCount')]"
                    },
                    "vmssName":{
                        "value":"[variables('vmssName')]"
                    }
                }
            }
        }
    ],
    "outputs":{
        "appUsername":{
            "condition":"[variables('provisionApp')]",
            "type":"string",
            "value":"[variables('adminUsername')]"
        },
        "appVmssId":{
            "condition":"[variables('provisionApp')]",
            "type":"string",
            "value":"[reference('appTemplate').outputs.vmssId.value]"
        },
        "appVmssName":{
            "condition":"[variables('provisionApp')]",
            "type":"string",
            "value":"[reference('appTemplate').outputs.vmssName.value]"
        },
        "bigIpUsername":{
            "type":"string",
            "value":"[variables('adminUsername')]"
        },
        "bigIpVmssId":{
            "type":"string",
            "value":"[reference('bigipTemplate').outputs.vmssId.value]"
        },
        "bigIpVmssName":{
            "type":"string",
            "value":"[reference('bigipTemplate').outputs.vmssName.value]"
        },
        "virtualNetworkId":{
            "type":"string",
            "value":"[reference('networkTemplate').outputs.virtualNetwork.value]"
        },
        "wafPublicIps":{
            "condition":"[variables('provisionApp')]",
            "type":"array",
            "value":"[reference('dagTemplate').outputs.externalIps.value]"
        }
    }
}